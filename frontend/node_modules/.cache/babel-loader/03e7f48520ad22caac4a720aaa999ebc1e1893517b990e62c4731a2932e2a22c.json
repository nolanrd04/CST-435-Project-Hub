{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nolan\\\\Desktop\\\\GCU\\\\Classes Year 4\\\\CST435\\\\hub-app\\\\frontend\\\\src\\\\projects\\\\projectRNN\\\\TextGenerator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextGenerator() {\n  _s();\n  const [seedText, setSeedText] = useState('');\n  const [numWords, setNumWords] = useState(50);\n  const [temperature, setTemperature] = useState(1.0);\n  const [generatedText, setGeneratedText] = useState('');\n  const handleGenerate = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/generate-text', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          seed_text: seedText,\n          num_words: numWords,\n          temperature\n        })\n      });\n      const data = await response.json();\n      setGeneratedText(data.generated_text);\n    } catch (error) {\n      console.error('Error generating text:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Text Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: seedText,\n      onChange: e => setSeedText(e.target.value),\n      placeholder: \"Enter seed text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: numWords,\n      onChange: e => setNumWords(Number(e.target.value)),\n      placeholder: \"Number of words\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: temperature,\n      onChange: e => setTemperature(Number(e.target.value)),\n      placeholder: \"Temperature\",\n      step: \"0.1\",\n      min: \"0.1\",\n      max: \"2.0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerate,\n      children: \"Generate Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), generatedText && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: generatedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(TextGenerator, \"J6ovUTkrGKzQDojN/1RvezLSMmA=\");\n_c = TextGenerator;\nexport default TextGenerator;\nvar _c;\n$RefreshReg$(_c, \"TextGenerator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextGenerator","_s","seedText","setSeedText","numWords","setNumWords","temperature","setTemperature","generatedText","setGeneratedText","handleGenerate","response","fetch","method","headers","body","JSON","stringify","seed_text","num_words","data","json","generated_text","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","type","Number","step","min","max","onClick","_c","$RefreshReg$"],"sources":["C:/Users/nolan/Desktop/GCU/Classes Year 4/CST435/hub-app/frontend/src/projects/projectRNN/TextGenerator.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction TextGenerator() {\r\n  const [seedText, setSeedText] = useState('');\r\n  const [numWords, setNumWords] = useState(50);\r\n  const [temperature, setTemperature] = useState(1.0);\r\n  const [generatedText, setGeneratedText] = useState('');\r\n\r\n  const handleGenerate = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/generate-text', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ seed_text: seedText, num_words: numWords, temperature }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setGeneratedText(data.generated_text);\r\n    } catch (error) {\r\n      console.error('Error generating text:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Text Generator</h2>\r\n      <textarea\r\n        value={seedText}\r\n        onChange={(e) => setSeedText(e.target.value)}\r\n        placeholder=\"Enter seed text\"\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        value={numWords}\r\n        onChange={(e) => setNumWords(Number(e.target.value))}\r\n        placeholder=\"Number of words\"\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        value={temperature}\r\n        onChange={(e) => setTemperature(Number(e.target.value))}\r\n        placeholder=\"Temperature\"\r\n        step=\"0.1\"\r\n        min=\"0.1\"\r\n        max=\"2.0\"\r\n      />\r\n      <button onClick={handleGenerate}>Generate Text</button>\r\n      {generatedText && <p>{generatedText}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextGenerator;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,GAAG,CAAC;EACnD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAClEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,SAAS,EAAEhB,QAAQ;UAAEiB,SAAS,EAAEf,QAAQ;UAAEE;QAAY,CAAC;MAChF,CAAC,CAAC;MAEF,MAAMc,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClCZ,gBAAgB,CAACW,IAAI,CAACE,cAAc,CAAC;IACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACExB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB9B,OAAA;MACE+B,KAAK,EAAE5B,QAAS;MAChB6B,QAAQ,EAAGC,CAAC,IAAK7B,WAAW,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CI,WAAW,EAAC;IAAiB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACF9B,OAAA;MACEoC,IAAI,EAAC,QAAQ;MACbL,KAAK,EAAE1B,QAAS;MAChB2B,QAAQ,EAAGC,CAAC,IAAK3B,WAAW,CAAC+B,MAAM,CAACJ,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,CAAE;MACrDI,WAAW,EAAC;IAAiB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACF9B,OAAA;MACEoC,IAAI,EAAC,QAAQ;MACbL,KAAK,EAAExB,WAAY;MACnByB,QAAQ,EAAGC,CAAC,IAAKzB,cAAc,CAAC6B,MAAM,CAACJ,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,CAAE;MACxDI,WAAW,EAAC,aAAa;MACzBG,IAAI,EAAC,KAAK;MACVC,GAAG,EAAC,KAAK;MACTC,GAAG,EAAC;IAAK;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACF9B,OAAA;MAAQyC,OAAO,EAAE9B,cAAe;MAAAe,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACtDrB,aAAa,iBAAIT,OAAA;MAAA0B,QAAA,EAAIjB;IAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV;AAAC5B,EAAA,CAlDQD,aAAa;AAAAyC,EAAA,GAAbzC,aAAa;AAoDtB,eAAeA,aAAa;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}